
dll.user32.MessageBox
(
    "int",
    NULL,
    "Test of call to dll.user32.MessageBox(...)",
    "ICI DLL call test",
    0/*MB_OK*/
);

dll.user32.MessageBox
(
    "int",
    NULL,
    sprintf("dll.kernel32.GetLastError() = %d\n", dll.kernel32.GetLastError("int")),
    "ICI DLL call test",
    0/*MB_OK*/
);

static HKEY_CURRENT_CONFIG = 0x80000005;
static KEY_QUERY_VALUE = 1;
static value_type = 0;
static valuez = 128;
static value = alloc(valuez);
static key_handle = 0;
static ecode;
static i;

ecode = dll.advapi32.RegOpenKeyEx
(
    "int",
    HKEY_CURRENT_CONFIG,
    "Display\\Settings",
    0,
    KEY_QUERY_VALUE,
    &key_handle
);
if (ecode != 0)
    fail(sprintf("Failed to RegOpenKeyEx(), returned %d.", ecode));
ecode = dll.advapi32.RegQueryValueEx
(
    "int",
    key_handle,
    "Resolution",
    0,
    &value_type,
    value,
    &valuez
);
if (ecode != 0)
    fail(sprintf("Failed to RegQueryValueEx(), returned %d.", ecode));

static
cstring(m)
{
    auto    a, c, i;
    auto    vargs = [array 0];

    a = array();
    for (i = 0 + vargs[0]; i < nels(m); ++i)
    {
        if ((c = m[i]) == 0)
            break;
        push(a, c);
    }
    return implode(a);
}

dll.user32.MessageBox
(
    "int",
    NULL,
    sprintf("HKEY_CURRENT_CONFIG\\Display\\Settings\\Resolution = %s",
        cstring(value)),
    "ICI DLL call test",
    0/*MB_OK*/
);


